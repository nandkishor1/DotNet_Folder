//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityFramework_Demo.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ADO_DotNet_DBEntities : DbContext
    {
        public ADO_DotNet_DBEntities()
            : base("name=ADO_DotNet_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<tbl_Hobies> tbl_Hobies { get; set; }
        public virtual DbSet<standardList> standardLists { get; set; }
        public virtual DbSet<studentList> studentLists { get; set; }
    
        public virtual ObjectResult<prc_GetData_Result> prc_GetData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetData_Result>("prc_GetData");
        }
    
        public virtual ObjectResult<prc_GetPeople_Result> prc_GetPeople()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetPeople_Result>("prc_GetPeople");
        }
    
        public virtual ObjectResult<prc_GetPeopleByDepartment_Result> prc_GetPeopleByDepartment(string dName, string lastName, Nullable<int> id)
        {
            var dNameParameter = dName != null ?
                new ObjectParameter("DName", dName) :
                new ObjectParameter("DName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_GetPeopleByDepartment_Result>("prc_GetPeopleByDepartment", dNameParameter, lastNameParameter, idParameter);
        }
    
        public virtual int prc_InsertData(Nullable<int> iD, string first_Name, string last_Name, string department)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var first_NameParameter = first_Name != null ?
                new ObjectParameter("First_Name", first_Name) :
                new ObjectParameter("First_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_InsertData", iDParameter, first_NameParameter, last_NameParameter, departmentParameter);
        }
    
        public virtual int prc_InsertHobbies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_InsertHobbies");
        }
    
        public virtual int prc_UpdateData(string lName, string dName)
        {
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var dNameParameter = dName != null ?
                new ObjectParameter("DName", dName) :
                new ObjectParameter("DName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prc_UpdateData", lNameParameter, dNameParameter);
        }
    }
}
