//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entity_Demo.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DWConfigurationEntities : DbContext
    {
        public DWConfigurationEntities()
            : base("name=DWConfigurationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<compute_node> compute_node { get; set; }
        public virtual DbSet<configuration_properties> configuration_properties { get; set; }
        public virtual DbSet<database_file> database_file { get; set; }
        public virtual DbSet<distribution> distributions { get; set; }
        public virtual DbSet<filegroup> filegroups { get; set; }
        public virtual DbSet<node> nodes { get; set; }
        public virtual DbSet<pdw_sp_configure> pdw_sp_configure { get; set; }
        public virtual DbSet<version_history> version_history { get; set; }
    
        public virtual int sp_pdw_polybase_authorize(string appName)
        {
            var appNameParameter = appName != null ?
                new ObjectParameter("AppName", appName) :
                new ObjectParameter("AppName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_pdw_polybase_authorize", appNameParameter);
        }
    
        public virtual int sp_pdw_sm_detach(string fileName)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_pdw_sm_detach", fileNameParameter);
        }
    
        public virtual int UpgradeDWConfiguration(Nullable<int> storedVer, string databaseName)
        {
            var storedVerParameter = storedVer.HasValue ?
                new ObjectParameter("StoredVer", storedVer) :
                new ObjectParameter("StoredVer", typeof(int));
    
            var databaseNameParameter = databaseName != null ?
                new ObjectParameter("DatabaseName", databaseName) :
                new ObjectParameter("DatabaseName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpgradeDWConfiguration", storedVerParameter, databaseNameParameter);
        }
    }
}
